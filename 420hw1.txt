Script started on Sat 25 Sep 2021 12:21:00 AM MST
[?1034hsh-4.2$ cat 420hw1.c
#include <stdio.h> 
#include <unistd.h>
#include <sys/types.h>
#include <stddef.h>

int main()
{
    pid_t pid;
    int i = 0;
    int parent = getppid();
    for (i = 0; i < 3; i++)
        {
          pid = fork();
          if (pid < 0)
            {
              printf("Fork Failed");
              return 1;
            }
          else if (pid == 0)
            {
              printf("I am child#%d, my pid is %d; my parent's pid is %d\n", i+1, getpid(), parent);
              if (i == 1)
                {
                  execv("mysecondprogram.exe", NULL);
                }
               exit(0);
            }
          else
            {
              printf("Parent, my pid is %d: Spawned child #%d whose pid is %d\n", parent, i+1, pid);
            }
        }
    return 0;
}
              
sh-4.2$ gcc secondprogram.c -o secondprogram.exe
/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crt1.o: In function `_start':
(.text+0x20): undefined reference to `main'
collect2: error: ld returned 1 exit status
sh-4.2$ gcc 420hw1.c
[01m[K420hw1.c:[m[K In function â€˜[01m[Kmain[m[Kâ€™:
[01m[K420hw1.c:26:16:[m[K [01;35m[Kwarning: [m[Kincompatible implicit declaration of built-in function â€˜[01m[Kexit[m[Kâ€™ [enabled by default]
                exit(0);
[01;32m[K                ^[m[K
sh-4.2$ a.out
Parent, my pid is 97569: Spawned child #1 whose pid is 97737
I am child#1, my pid is 97737; my parent's pid is 97569
Parent, my pid is 97569: Spawned child #2 whose pid is 97738
Parent, my pid is 97569: Spawned child #3 whose pid is 97739
I am child#2, my pid is 97738; my parent's pid is 97569
I am child#3, my pid is 97739; my parent's pid is 97569
sh-4.2$ Process #97738, now running program"mysecondprogram.exe"My parent's PID is 1
exit
exit

Script done on Sat 25 Sep 2021 12:22:36 AM MST
